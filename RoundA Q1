alphabet = input()
def has_collision(words, mapping):
    encoding = []
    mapping = mapping.replace(' ', '')
    digit_mapping = {chr(i + ord('A')): int(d) for i, d in enumerate(mapping)}
    for word in words:
        digits = []
        for char in word:
            digits.append(str(digit_mapping[char]))
        encoding.append(''.join(digits))
    return len(set(encoding)) != len(encoding)


T = int(input())
for case in range(1, T+1):
    # read mapping
    mapping = input().strip()
    # pad mapping with -1 to handle missing characters
    mapping += '-' * (26 - len(mapping))
    # read words
    N = int(input())
    words = []
    for i in range(N):
        words.append(input().strip())
    # check for collision
    result = 'YES' if has_collision(words, mapping) else 'NO'
    # print output
    print(f"Case #{case}: {result}")
