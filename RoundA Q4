def assign_integers(cards):
    assigned_integers = {}
    current_integer = 0
    current_color = None
    for color in sorted(cards):
        if color != current_color:
            current_integer += 1
            current_color = color
        for i, card in enumerate(cards[color]):
            if assigned_integers.get(card) is not None and assigned_integers[card] != current_integer:
                return "IMPOSSIBLE"
            assigned_integers[card] = current_integer
    result = [None] * (max(cards.keys()) + 1)
    for card, integer in assigned_integers.items():
        result[card] = integer - 1
    if None in result:
        return "IMPOSSIBLE"
    return " ".join(str(x) for x in result[1:])

T = int(input())
for case in range(1, T + 1):
    N = int(input())
    cards = {}
    for i, color in enumerate(map(int, input().split()), start=1):
        if color not in cards:
            cards[color] = []
        cards[color].append(i)
    result = assign_integers(cards)
    print(f"Case #{case}: {result}")



'''
def assign_integers(cards):
    assigned_integers = {}
    current_integer = 0
    current_color = None
    for color in sorted(cards):
        if color != current_color:
            current_integer += 1
            current_color = color
        for i, card in enumerate(cards[color]):
            if assigned_integers.get(card) is not None and assigned_integers[card] != current_integer:
                return "IMPOSSIBLE"
            assigned_integers[card] = current_integer
    result = [None] * (max(cards.keys()) + 1)
    for card, integer in assigned_integers.items():
        result[card] = integer
    if None in result:
        return "IMPOSSIBLE"
    return " ".join(str(x) for x in result[1:])


T = int(input())
for case in range(1, T + 1):
    N = int(input())
    cards = {}
    for i, color in enumerate(map(int, input().split()), start=1):
        if color not in cards:
            cards[color] = []
        cards[color].append(i)
    result = assign_integers(cards)
    print(f"Case #{case}: {result}")
